@using Shared.Models.DTOs
@inject NavigationManager Navigation
@using Web.Services;
<MudDialog>
    <TitleContent>
        Adicionar novo Módulo
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="ModuleDescription" Label="Descrição" Variant="Variant.Text"></MudTextField>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    public string ModuleDescription { get; set; }

    [Inject]
    public IModulesService service { get; set; }

    private async void Submit()
    {
        var newModule = new CreateModuleRequest()
            {
                Description = ModuleDescription
            };

        var result = await service.CreateModuleAsync(newModule);

        if (result.Data > 0)
        {
            MudDialog.Close(DialogResult.Ok(true));

            Navigation.NavigateTo($"/modules/{result.Data}");
        }
    }

    private void Cancel() => MudDialog.Cancel();
}
